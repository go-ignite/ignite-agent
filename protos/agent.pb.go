// Code generated by protoc-gen-go. DO NOT EDIT.
// source: agent.proto

package protos // import "github.com/go-ignite/ignite-agent/protos"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ServiceType_Enum int32

const (
	ServiceType_NOT_SET  ServiceType_Enum = 0
	ServiceType_SS_LIBEV ServiceType_Enum = 1
	ServiceType_SSR      ServiceType_Enum = 2
)

var ServiceType_Enum_name = map[int32]string{
	0: "NOT_SET",
	1: "SS_LIBEV",
	2: "SSR",
}
var ServiceType_Enum_value = map[string]int32{
	"NOT_SET":  0,
	"SS_LIBEV": 1,
	"SSR":      2,
}

func (x ServiceType_Enum) String() string {
	return proto.EnumName(ServiceType_Enum_name, int32(x))
}
func (ServiceType_Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_agent_cadd52277f349fef, []int{0, 0}
}

type ServiceType struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServiceType) Reset()         { *m = ServiceType{} }
func (m *ServiceType) String() string { return proto.CompactTextString(m) }
func (*ServiceType) ProtoMessage()    {}
func (*ServiceType) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_cadd52277f349fef, []int{0}
}
func (m *ServiceType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceType.Unmarshal(m, b)
}
func (m *ServiceType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceType.Marshal(b, m, deterministic)
}
func (dst *ServiceType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceType.Merge(dst, src)
}
func (m *ServiceType) XXX_Size() int {
	return xxx_messageInfo_ServiceType.Size(m)
}
func (m *ServiceType) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceType.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceType proto.InternalMessageInfo

type GeneralRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeneralRequest) Reset()         { *m = GeneralRequest{} }
func (m *GeneralRequest) String() string { return proto.CompactTextString(m) }
func (*GeneralRequest) ProtoMessage()    {}
func (*GeneralRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_cadd52277f349fef, []int{1}
}
func (m *GeneralRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeneralRequest.Unmarshal(m, b)
}
func (m *GeneralRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeneralRequest.Marshal(b, m, deterministic)
}
func (dst *GeneralRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeneralRequest.Merge(dst, src)
}
func (m *GeneralRequest) XXX_Size() int {
	return xxx_messageInfo_GeneralRequest.Size(m)
}
func (m *GeneralRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GeneralRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GeneralRequest proto.InternalMessageInfo

func (m *GeneralRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GeneralResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GeneralResponse) Reset()         { *m = GeneralResponse{} }
func (m *GeneralResponse) String() string { return proto.CompactTextString(m) }
func (*GeneralResponse) ProtoMessage()    {}
func (*GeneralResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_cadd52277f349fef, []int{2}
}
func (m *GeneralResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GeneralResponse.Unmarshal(m, b)
}
func (m *GeneralResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GeneralResponse.Marshal(b, m, deterministic)
}
func (dst *GeneralResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GeneralResponse.Merge(dst, src)
}
func (m *GeneralResponse) XXX_Size() int {
	return xxx_messageInfo_GeneralResponse.Size(m)
}
func (m *GeneralResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GeneralResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GeneralResponse proto.InternalMessageInfo

type HeartbeatStreamServer struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatStreamServer) Reset()         { *m = HeartbeatStreamServer{} }
func (m *HeartbeatStreamServer) String() string { return proto.CompactTextString(m) }
func (*HeartbeatStreamServer) ProtoMessage()    {}
func (*HeartbeatStreamServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_cadd52277f349fef, []int{3}
}
func (m *HeartbeatStreamServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatStreamServer.Unmarshal(m, b)
}
func (m *HeartbeatStreamServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatStreamServer.Marshal(b, m, deterministic)
}
func (dst *HeartbeatStreamServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatStreamServer.Merge(dst, src)
}
func (m *HeartbeatStreamServer) XXX_Size() int {
	return xxx_messageInfo_HeartbeatStreamServer.Size(m)
}
func (m *HeartbeatStreamServer) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatStreamServer.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatStreamServer proto.InternalMessageInfo

type GetAvailablePortRequest struct {
	Token                string   `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	UsedPorts            []int32  `protobuf:"varint,2,rep,packed,name=used_ports,json=usedPorts" json:"used_ports,omitempty"`
	PortFrom             int32    `protobuf:"varint,3,opt,name=port_from,json=portFrom" json:"port_from,omitempty"`
	PortTo               int32    `protobuf:"varint,4,opt,name=port_to,json=portTo" json:"port_to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAvailablePortRequest) Reset()         { *m = GetAvailablePortRequest{} }
func (m *GetAvailablePortRequest) String() string { return proto.CompactTextString(m) }
func (*GetAvailablePortRequest) ProtoMessage()    {}
func (*GetAvailablePortRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_cadd52277f349fef, []int{4}
}
func (m *GetAvailablePortRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAvailablePortRequest.Unmarshal(m, b)
}
func (m *GetAvailablePortRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAvailablePortRequest.Marshal(b, m, deterministic)
}
func (dst *GetAvailablePortRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAvailablePortRequest.Merge(dst, src)
}
func (m *GetAvailablePortRequest) XXX_Size() int {
	return xxx_messageInfo_GetAvailablePortRequest.Size(m)
}
func (m *GetAvailablePortRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAvailablePortRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetAvailablePortRequest proto.InternalMessageInfo

func (m *GetAvailablePortRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *GetAvailablePortRequest) GetUsedPorts() []int32 {
	if m != nil {
		return m.UsedPorts
	}
	return nil
}

func (m *GetAvailablePortRequest) GetPortFrom() int32 {
	if m != nil {
		return m.PortFrom
	}
	return 0
}

func (m *GetAvailablePortRequest) GetPortTo() int32 {
	if m != nil {
		return m.PortTo
	}
	return 0
}

type GetAvailablePortResponse struct {
	Port                 int32    `protobuf:"varint,1,opt,name=port" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetAvailablePortResponse) Reset()         { *m = GetAvailablePortResponse{} }
func (m *GetAvailablePortResponse) String() string { return proto.CompactTextString(m) }
func (*GetAvailablePortResponse) ProtoMessage()    {}
func (*GetAvailablePortResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_cadd52277f349fef, []int{5}
}
func (m *GetAvailablePortResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetAvailablePortResponse.Unmarshal(m, b)
}
func (m *GetAvailablePortResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetAvailablePortResponse.Marshal(b, m, deterministic)
}
func (dst *GetAvailablePortResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetAvailablePortResponse.Merge(dst, src)
}
func (m *GetAvailablePortResponse) XXX_Size() int {
	return xxx_messageInfo_GetAvailablePortResponse.Size(m)
}
func (m *GetAvailablePortResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetAvailablePortResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetAvailablePortResponse proto.InternalMessageInfo

func (m *GetAvailablePortResponse) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type CreateServiceRequest struct {
	Token                string           `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Port                 int32            `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	Type                 ServiceType_Enum `protobuf:"varint,3,opt,name=type,enum=ServiceType_Enum" json:"type,omitempty"`
	Method               string           `protobuf:"bytes,4,opt,name=method" json:"method,omitempty"`
	Password             string           `protobuf:"bytes,5,opt,name=password" json:"password,omitempty"`
	Name                 string           `protobuf:"bytes,6,opt,name=name" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *CreateServiceRequest) Reset()         { *m = CreateServiceRequest{} }
func (m *CreateServiceRequest) String() string { return proto.CompactTextString(m) }
func (*CreateServiceRequest) ProtoMessage()    {}
func (*CreateServiceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_cadd52277f349fef, []int{6}
}
func (m *CreateServiceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateServiceRequest.Unmarshal(m, b)
}
func (m *CreateServiceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateServiceRequest.Marshal(b, m, deterministic)
}
func (dst *CreateServiceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateServiceRequest.Merge(dst, src)
}
func (m *CreateServiceRequest) XXX_Size() int {
	return xxx_messageInfo_CreateServiceRequest.Size(m)
}
func (m *CreateServiceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateServiceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateServiceRequest proto.InternalMessageInfo

func (m *CreateServiceRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *CreateServiceRequest) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *CreateServiceRequest) GetType() ServiceType_Enum {
	if m != nil {
		return m.Type
	}
	return ServiceType_NOT_SET
}

func (m *CreateServiceRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *CreateServiceRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CreateServiceRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CreateServiceResponse struct {
	ServiceId            string   `protobuf:"bytes,1,opt,name=service_id,json=serviceId" json:"service_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateServiceResponse) Reset()         { *m = CreateServiceResponse{} }
func (m *CreateServiceResponse) String() string { return proto.CompactTextString(m) }
func (*CreateServiceResponse) ProtoMessage()    {}
func (*CreateServiceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_agent_cadd52277f349fef, []int{7}
}
func (m *CreateServiceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateServiceResponse.Unmarshal(m, b)
}
func (m *CreateServiceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateServiceResponse.Marshal(b, m, deterministic)
}
func (dst *CreateServiceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateServiceResponse.Merge(dst, src)
}
func (m *CreateServiceResponse) XXX_Size() int {
	return xxx_messageInfo_CreateServiceResponse.Size(m)
}
func (m *CreateServiceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateServiceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateServiceResponse proto.InternalMessageInfo

func (m *CreateServiceResponse) GetServiceId() string {
	if m != nil {
		return m.ServiceId
	}
	return ""
}

func init() {
	proto.RegisterType((*ServiceType)(nil), "ServiceType")
	proto.RegisterType((*GeneralRequest)(nil), "GeneralRequest")
	proto.RegisterType((*GeneralResponse)(nil), "GeneralResponse")
	proto.RegisterType((*HeartbeatStreamServer)(nil), "HeartbeatStreamServer")
	proto.RegisterType((*GetAvailablePortRequest)(nil), "GetAvailablePortRequest")
	proto.RegisterType((*GetAvailablePortResponse)(nil), "GetAvailablePortResponse")
	proto.RegisterType((*CreateServiceRequest)(nil), "CreateServiceRequest")
	proto.RegisterType((*CreateServiceResponse)(nil), "CreateServiceResponse")
	proto.RegisterEnum("ServiceType_Enum", ServiceType_Enum_name, ServiceType_Enum_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AgentServiceClient is the client API for AgentService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentServiceClient interface {
	NodeHeartbeat(ctx context.Context, in *GeneralRequest, opts ...grpc.CallOption) (AgentService_NodeHeartbeatClient, error)
	ServiceHeartbeat(ctx context.Context, in *GeneralRequest, opts ...grpc.CallOption) (AgentService_ServiceHeartbeatClient, error)
	Init(ctx context.Context, in *GeneralRequest, opts ...grpc.CallOption) (*GeneralResponse, error)
	GetAvailablePort(ctx context.Context, in *GetAvailablePortRequest, opts ...grpc.CallOption) (*GetAvailablePortResponse, error)
	CreateService(ctx context.Context, in *CreateServiceRequest, opts ...grpc.CallOption) (*CreateServiceResponse, error)
}

type agentServiceClient struct {
	cc *grpc.ClientConn
}

func NewAgentServiceClient(cc *grpc.ClientConn) AgentServiceClient {
	return &agentServiceClient{cc}
}

func (c *agentServiceClient) NodeHeartbeat(ctx context.Context, in *GeneralRequest, opts ...grpc.CallOption) (AgentService_NodeHeartbeatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AgentService_serviceDesc.Streams[0], "/AgentService/NodeHeartbeat", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentServiceNodeHeartbeatClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AgentService_NodeHeartbeatClient interface {
	Recv() (*HeartbeatStreamServer, error)
	grpc.ClientStream
}

type agentServiceNodeHeartbeatClient struct {
	grpc.ClientStream
}

func (x *agentServiceNodeHeartbeatClient) Recv() (*HeartbeatStreamServer, error) {
	m := new(HeartbeatStreamServer)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentServiceClient) ServiceHeartbeat(ctx context.Context, in *GeneralRequest, opts ...grpc.CallOption) (AgentService_ServiceHeartbeatClient, error) {
	stream, err := c.cc.NewStream(ctx, &_AgentService_serviceDesc.Streams[1], "/AgentService/ServiceHeartbeat", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentServiceServiceHeartbeatClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type AgentService_ServiceHeartbeatClient interface {
	Recv() (*HeartbeatStreamServer, error)
	grpc.ClientStream
}

type agentServiceServiceHeartbeatClient struct {
	grpc.ClientStream
}

func (x *agentServiceServiceHeartbeatClient) Recv() (*HeartbeatStreamServer, error) {
	m := new(HeartbeatStreamServer)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentServiceClient) Init(ctx context.Context, in *GeneralRequest, opts ...grpc.CallOption) (*GeneralResponse, error) {
	out := new(GeneralResponse)
	err := c.cc.Invoke(ctx, "/AgentService/Init", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) GetAvailablePort(ctx context.Context, in *GetAvailablePortRequest, opts ...grpc.CallOption) (*GetAvailablePortResponse, error) {
	out := new(GetAvailablePortResponse)
	err := c.cc.Invoke(ctx, "/AgentService/GetAvailablePort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *agentServiceClient) CreateService(ctx context.Context, in *CreateServiceRequest, opts ...grpc.CallOption) (*CreateServiceResponse, error) {
	out := new(CreateServiceResponse)
	err := c.cc.Invoke(ctx, "/AgentService/CreateService", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AgentServiceServer is the server API for AgentService service.
type AgentServiceServer interface {
	NodeHeartbeat(*GeneralRequest, AgentService_NodeHeartbeatServer) error
	ServiceHeartbeat(*GeneralRequest, AgentService_ServiceHeartbeatServer) error
	Init(context.Context, *GeneralRequest) (*GeneralResponse, error)
	GetAvailablePort(context.Context, *GetAvailablePortRequest) (*GetAvailablePortResponse, error)
	CreateService(context.Context, *CreateServiceRequest) (*CreateServiceResponse, error)
}

func RegisterAgentServiceServer(s *grpc.Server, srv AgentServiceServer) {
	s.RegisterService(&_AgentService_serviceDesc, srv)
}

func _AgentService_NodeHeartbeat_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GeneralRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AgentServiceServer).NodeHeartbeat(m, &agentServiceNodeHeartbeatServer{stream})
}

type AgentService_NodeHeartbeatServer interface {
	Send(*HeartbeatStreamServer) error
	grpc.ServerStream
}

type agentServiceNodeHeartbeatServer struct {
	grpc.ServerStream
}

func (x *agentServiceNodeHeartbeatServer) Send(m *HeartbeatStreamServer) error {
	return x.ServerStream.SendMsg(m)
}

func _AgentService_ServiceHeartbeat_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GeneralRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AgentServiceServer).ServiceHeartbeat(m, &agentServiceServiceHeartbeatServer{stream})
}

type AgentService_ServiceHeartbeatServer interface {
	Send(*HeartbeatStreamServer) error
	grpc.ServerStream
}

type agentServiceServiceHeartbeatServer struct {
	grpc.ServerStream
}

func (x *agentServiceServiceHeartbeatServer) Send(m *HeartbeatStreamServer) error {
	return x.ServerStream.SendMsg(m)
}

func _AgentService_Init_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GeneralRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).Init(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AgentService/Init",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).Init(ctx, req.(*GeneralRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_GetAvailablePort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAvailablePortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).GetAvailablePort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AgentService/GetAvailablePort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).GetAvailablePort(ctx, req.(*GetAvailablePortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AgentService_CreateService_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateServiceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AgentServiceServer).CreateService(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/AgentService/CreateService",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AgentServiceServer).CreateService(ctx, req.(*CreateServiceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AgentService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "AgentService",
	HandlerType: (*AgentServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Init",
			Handler:    _AgentService_Init_Handler,
		},
		{
			MethodName: "GetAvailablePort",
			Handler:    _AgentService_GetAvailablePort_Handler,
		},
		{
			MethodName: "CreateService",
			Handler:    _AgentService_CreateService_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "NodeHeartbeat",
			Handler:       _AgentService_NodeHeartbeat_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ServiceHeartbeat",
			Handler:       _AgentService_ServiceHeartbeat_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "agent.proto",
}

func init() { proto.RegisterFile("agent.proto", fileDescriptor_agent_cadd52277f349fef) }

var fileDescriptor_agent_cadd52277f349fef = []byte{
	// 489 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xdf, 0x8b, 0xd3, 0x40,
	0x10, 0x36, 0x6d, 0xd2, 0x36, 0xd3, 0xfb, 0x91, 0x5b, 0xae, 0x6d, 0xac, 0x1c, 0x94, 0x80, 0x52,
	0x0f, 0x6e, 0x2b, 0x27, 0x08, 0x0a, 0x0a, 0x77, 0x52, 0x6b, 0x41, 0x4e, 0x49, 0x8a, 0x0f, 0xbe,
	0x84, 0xed, 0x65, 0xec, 0x05, 0x9b, 0x6c, 0xdc, 0xdd, 0x9e, 0xdc, 0xbb, 0xff, 0x8f, 0x7f, 0x81,
	0xff, 0x9b, 0xec, 0x36, 0x56, 0xaf, 0xf6, 0xfa, 0xe0, 0xd3, 0xee, 0x7c, 0xdf, 0xce, 0xe4, 0xcb,
	0x7c, 0x33, 0xd0, 0x64, 0x33, 0xcc, 0x15, 0x2d, 0x04, 0x57, 0x3c, 0x78, 0x0e, 0xcd, 0x08, 0xc5,
	0x75, 0x7a, 0x89, 0x93, 0x9b, 0x02, 0x83, 0x63, 0xb0, 0x87, 0xf9, 0x22, 0x23, 0x4d, 0xa8, 0x5f,
	0xbc, 0x9f, 0xc4, 0xd1, 0x70, 0xe2, 0xdd, 0x23, 0x3b, 0xd0, 0x88, 0xa2, 0xf8, 0xdd, 0xf8, 0x7c,
	0xf8, 0xd1, 0xb3, 0x48, 0x1d, 0xaa, 0x51, 0x14, 0x7a, 0x95, 0xe0, 0x11, 0xec, 0x8d, 0x30, 0x47,
	0xc1, 0xe6, 0x21, 0x7e, 0x5d, 0xa0, 0x54, 0xe4, 0x10, 0x1c, 0xc5, 0xbf, 0x60, 0xee, 0x5b, 0x3d,
	0xab, 0xef, 0x86, 0xcb, 0x20, 0x38, 0x80, 0xfd, 0xd5, 0x3b, 0x59, 0xf0, 0x5c, 0x62, 0xd0, 0x81,
	0xd6, 0x5b, 0x64, 0x42, 0x4d, 0x91, 0xa9, 0x48, 0x09, 0x64, 0x99, 0x16, 0x81, 0x22, 0xf8, 0x6e,
	0x41, 0x67, 0x84, 0xea, 0xec, 0x9a, 0xa5, 0x73, 0x36, 0x9d, 0xe3, 0x07, 0x2e, 0xd4, 0xd6, 0xea,
	0xe4, 0x08, 0x60, 0x21, 0x31, 0x89, 0x0b, 0x2e, 0x94, 0xf4, 0x2b, 0xbd, 0x6a, 0xdf, 0x09, 0x5d,
	0x8d, 0xe8, 0x54, 0x49, 0x1e, 0x80, 0xab, 0x99, 0xf8, 0xb3, 0xe0, 0x99, 0x5f, 0xed, 0x59, 0x7d,
	0x27, 0x6c, 0x68, 0xe0, 0x8d, 0xe0, 0x19, 0xe9, 0x40, 0xdd, 0x90, 0x8a, 0xfb, 0xb6, 0xa1, 0x6a,
	0x3a, 0x9c, 0xf0, 0x80, 0x82, 0xff, 0xaf, 0x8a, 0xa5, 0x76, 0x42, 0xc0, 0xd6, 0xaf, 0x8c, 0x0a,
	0x27, 0x34, 0xf7, 0xe0, 0x87, 0x05, 0x87, 0xaf, 0x05, 0x32, 0x85, 0x65, 0x33, 0xb7, 0x6b, 0xfe,
	0x5d, 0xa2, 0xf2, 0xa7, 0x04, 0x79, 0x08, 0xb6, 0xba, 0x29, 0xd0, 0x68, 0xdc, 0x3b, 0x3d, 0xa0,
	0x7f, 0xb9, 0x42, 0xb5, 0x25, 0xa1, 0xa1, 0x49, 0x1b, 0x6a, 0x19, 0xaa, 0x2b, 0x9e, 0x18, 0xc5,
	0x6e, 0x58, 0x46, 0xa4, 0x0b, 0x8d, 0x82, 0x49, 0xf9, 0x8d, 0x8b, 0xc4, 0x77, 0x0c, 0xb3, 0x8a,
	0xf5, 0xe7, 0x72, 0x96, 0xa1, 0x5f, 0x33, 0xb8, 0xb9, 0x07, 0xcf, 0xa0, 0xb5, 0x26, 0xb8, 0xfc,
	0xbd, 0x23, 0x00, 0xb9, 0x84, 0xe2, 0x34, 0x29, 0x65, 0xbb, 0x25, 0x32, 0x4e, 0x4e, 0x7f, 0x56,
	0x60, 0xe7, 0x4c, 0xcf, 0x4f, 0x99, 0x47, 0x5e, 0xc0, 0xee, 0x05, 0x4f, 0x70, 0x65, 0x27, 0xd9,
	0xa7, 0xb7, 0xa7, 0xa2, 0xdb, 0xa6, 0x1b, 0xbd, 0x7e, 0x62, 0x91, 0x97, 0xe0, 0x95, 0x65, 0xfe,
	0x2b, 0xfd, 0x31, 0xd8, 0xe3, 0x3c, 0xdd, 0x90, 0xe2, 0xd1, 0xb5, 0x81, 0x23, 0x23, 0xf0, 0xd6,
	0x0d, 0x25, 0x3e, 0xbd, 0x63, 0xd2, 0xba, 0xf7, 0xe9, 0x9d, 0xee, 0xbf, 0x82, 0xdd, 0x5b, 0x7d,
	0x23, 0x2d, 0xba, 0xc9, 0xf8, 0x6e, 0x9b, 0x6e, 0x6c, 0xef, 0xf9, 0xf1, 0xa7, 0xfe, 0x2c, 0x55,
	0x57, 0x8b, 0x29, 0xbd, 0xe4, 0xd9, 0x60, 0xc6, 0x4f, 0xd2, 0x59, 0x9e, 0x2a, 0x1c, 0x2c, 0x8f,
	0x13, 0xb3, 0x9a, 0x03, 0xb3, 0x9a, 0x72, 0x5a, 0x33, 0xe7, 0xd3, 0x5f, 0x01, 0x00, 0x00, 0xff,
	0xff, 0xfc, 0x22, 0x04, 0xab, 0xb1, 0x03, 0x00, 0x00,
}
