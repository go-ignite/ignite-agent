syntax = "proto3";
option go_package = "github.com/go-ignite/ignite-agent/protos";

service AgentService {
    rpc NodeHeartbeat(GeneralRequest) returns (stream HeartbeatStreamServer);
    rpc Sync(GeneralRequest) returns (stream SyncStreamServer);

    rpc Init(GeneralRequest) returns (GeneralResponse);
    rpc CreateService(CreateServiceRequest) returns (CreateServiceResponse);
    rpc StopService(StopServiceRequest) returns (GeneralResponse);
    rpc RemoveService(RemoveServiceRequest) returns (GeneralResponse);
}

message ServiceType {
    enum Enum {
        NOT_SET = 0;
  	    SS_LIBEV = 1;
        SSR = 2;
    }
}


message GeneralRequest {
	string token = 1;
}

message GeneralResponse {}

message HeartbeatStreamServer{}

message ServiceStatus {
	string service_id = 1;
	string user_id = 2;
	string container_id = 3;
	int32 port = 4;
	int32 status = 5;
	int64 stats_result = 6;
}

message SyncStreamServer{
	repeated ServiceStatus services = 1;
}

message CreateServiceRequest {
	string token = 1;
	int32 port_from = 2;
	int32 port_to = 3;
	ServiceType.Enum type = 4;
	string method = 5;
	string password = 6;
	string name = 7;
}

message CreateServiceResponse {
	string service_id = 1;
	string container_id = 2;
	int32 port = 3;
}

message StopServiceRequest {
	string token = 1;
	string service_id = 2;
}

message RemoveServiceRequest {
	string token = 1;
	string service_id = 2;
}
