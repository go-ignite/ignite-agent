syntax = "proto3";
option go_package = "github.com/go-ignite/ignite-agent/protos";
import "google/protobuf/duration.proto";

service AgentService {
	rpc Heartbeat(HeartbeatRequest) returns (stream HeartbeatStreamServer);
	rpc Sync(SyncRequest) returns (stream SyncStreamServer);

	rpc CreateService(CreateServiceRequest) returns (CreateServiceResponse);
	rpc StopService(StopServiceRequest) returns (EmptyResponse);
	rpc StartService(StartServiceRequest) returns (EmptyResponse);
	rpc RemoveService(RemoveServiceRequest) returns (EmptyResponse);
}

message ServiceType {
    enum Enum {
		NOT_SET = 0;
		SS_LIBEV = 1;
		SSR = 2;
    }
}

message ServiceEncryptionMethod {
	enum Enum {
		NOT_SET = 0;
		AES_256_CFB = 1;
		AES_128_GCM = 2;
		AES_192_GCM = 3;
		AES_256_GCM = 4;
		CHACHA20_IETF_POLY1305 = 5;
		AES_256_CTR = 6;
		CHACHA20 = 7;
		CHACHA20_IETF = 8;
	}
}

message ServiceStatus {
	enum Enum {
		NOT_SET = 0;
		RUNNING = 1;
		STOPPED = 2;
	}
}


message EmptyRequest {}

message EmptyResponse {}

message HeartbeatRequest {
	google.protobuf.Duration interval = 1;
}

message HeartbeatStreamServer{}

message ServiceInfo {
	string container_name = 1;
	string container_id = 2;
	int32 port = 3;
	ServiceStatus.Enum status = 4;
	int64 stats_result = 5;
}

message SyncStreamServer{
	repeated ServiceInfo services = 1;
}

message SyncRequest {
	google.protobuf.Duration sync_interval = 1;
	string node_id = 2;
}

message CreateServiceRequest {
	int32 port_from = 1;
	int32 port_to = 2;
	ServiceType.Enum type = 3;
	ServiceEncryptionMethod.Enum encryption_method = 4;
	string password = 5;
	string user_id = 6;
	string node_id = 7;
}

message CreateServiceResponse {
	string container_name = 1;
	string container_id = 2;
	int32 port = 3;
}

message StopServiceRequest {
	string container_id = 1;
}

message StartServiceRequest {
	string container_id = 1;
}

message RemoveServiceRequest {
	string container_id = 1;
}
